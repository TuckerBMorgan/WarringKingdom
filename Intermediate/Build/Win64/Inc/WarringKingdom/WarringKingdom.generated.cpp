// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/WarringKingdom.h"
#include "WarringKingdom.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeWarringKingdom() {}
	void AGridManager::StaticRegisterNativesAGridManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGridManager::StaticClass(),"FindPathToUnit",(Native)&AGridManager::execFindPathToUnit);
		FNativeFunctionRegistrar::RegisterFunction(AGridManager::StaticClass(),"GetA",(Native)&AGridManager::execGetA);
		FNativeFunctionRegistrar::RegisterFunction(AGridManager::StaticClass(),"GetB",(Native)&AGridManager::execGetB);
		FNativeFunctionRegistrar::RegisterFunction(AGridManager::StaticClass(),"GetGrid",(Native)&AGridManager::execGetGrid);
	}
	IMPLEMENT_CLASS(AGridManager, 4259505611);
	void AGridTile::StaticRegisterNativesAGridTile()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGridTile::StaticClass(),"getHasBeenCheck",(Native)&AGridTile::execgetHasBeenCheck);
	}
	IMPLEMENT_CLASS(AGridTile, 2726399372);
	void AWarringKingdomCharacter::StaticRegisterNativesAWarringKingdomCharacter()
	{
	}
	IMPLEMENT_CLASS(AWarringKingdomCharacter, 2527710404);
	void AWarringKingdomGameMode::StaticRegisterNativesAWarringKingdomGameMode()
	{
	}
	IMPLEMENT_CLASS(AWarringKingdomGameMode, 3219418502);
	void AWarringKingdomPlayerController::StaticRegisterNativesAWarringKingdomPlayerController()
	{
	}
	IMPLEMENT_CLASS(AWarringKingdomPlayerController, 876009339);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();

	WARRINGKINGDOM_API class UFunction* Z_Construct_UFunction_AGridManager_FindPathToUnit();
	WARRINGKINGDOM_API class UFunction* Z_Construct_UFunction_AGridManager_GetA();
	WARRINGKINGDOM_API class UFunction* Z_Construct_UFunction_AGridManager_GetB();
	WARRINGKINGDOM_API class UFunction* Z_Construct_UFunction_AGridManager_GetGrid();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AGridManager_NoRegister();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AGridManager();
	WARRINGKINGDOM_API class UFunction* Z_Construct_UFunction_AGridTile_getHasBeenCheck();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AGridTile_NoRegister();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AGridTile();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomCharacter_NoRegister();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomCharacter();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomGameMode_NoRegister();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomGameMode();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomPlayerController_NoRegister();
	WARRINGKINGDOM_API class UClass* Z_Construct_UClass_AWarringKingdomPlayerController();
	WARRINGKINGDOM_API class UPackage* Z_Construct_UPackage_WarringKingdom();
	UFunction* Z_Construct_UFunction_AGridManager_FindPathToUnit()
	{
		struct GridManager_eventFindPathToUnit_Parms
		{
			class AGridTile* StartTile;
			class AGridTile* EndTile;
			TArray<class AGridTile*> ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AGridManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("FindPathToUnit"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(GridManager_eventFindPathToUnit_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GridManager_eventFindPathToUnit_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_EndTile = new(ReturnFunction, TEXT("EndTile"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EndTile, GridManager_eventFindPathToUnit_Parms), 0x0000000000000080, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_StartTile = new(ReturnFunction, TEXT("StartTile"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(StartTile, GridManager_eventFindPathToUnit_Parms), 0x0000000000000080, Z_Construct_UClass_AGridTile_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_EndTile, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_StartTile, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGridManager_GetA()
	{
		struct GridManager_eventGetA_Parms
		{
			class AGridTile* ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AGridManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetA"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(GridManager_eventGetA_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GridManager_eventGetA_Parms), 0x0000000000000580, Z_Construct_UClass_AGridTile_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGridManager_GetB()
	{
		struct GridManager_eventGetB_Parms
		{
			class AGridTile* ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AGridManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetB"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(GridManager_eventGetB_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GridManager_eventGetB_Parms), 0x0000000000000580, Z_Construct_UClass_AGridTile_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGridManager_GetGrid()
	{
		struct GridManager_eventGetGrid_Parms
		{
			TArray<class AGridTile*> ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AGridManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetGrid"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(GridManager_eventGetGrid_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GridManager_eventGetGrid_Parms), 0x0000000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AGridTile_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGridManager_NoRegister()
	{
		return AGridManager::StaticClass();
	}
	UClass* Z_Construct_UClass_AGridManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_WarringKingdom();
			OuterClass = AGridManager::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;

			OuterClass->LinkChild(Z_Construct_UFunction_AGridManager_FindPathToUnit());
			OuterClass->LinkChild(Z_Construct_UFunction_AGridManager_GetA());
			OuterClass->LinkChild(Z_Construct_UFunction_AGridManager_GetB());
			OuterClass->LinkChild(Z_Construct_UFunction_AGridManager_GetGrid());

			UProperty* NewProp_GridBluePrint = new(OuterClass, TEXT("GridBluePrint"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(GridBluePrint, AGridManager), 0x0000000000010001, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_B = new(OuterClass, TEXT("B"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(B, AGridManager), 0x0000000000000001, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_A = new(OuterClass, TEXT("A"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(A, AGridManager), 0x0000000000000001, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_Grid = new(OuterClass, TEXT("Grid"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Grid, AGridManager), 0x0000000000000001);
			UProperty* NewProp_Grid_Inner = new(NewProp_Grid, TEXT("Grid"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AGridTile_NoRegister());
			UProperty* NewProp_SizeOfArray = new(OuterClass, TEXT("SizeOfArray"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SizeOfArray, AGridManager), 0x0000000000000001);
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGridManager_FindPathToUnit());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGridManager_GetA());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGridManager_GetB());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGridManager_GetGrid());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GridManager.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_GridBluePrint, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_GridBluePrint, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_B, TEXT("Category"), TEXT("Jimmy"));
			MetaData->SetValue(NewProp_B, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_A, TEXT("Category"), TEXT("Jimmy"));
			MetaData->SetValue(NewProp_A, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_Grid, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_Grid, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
			MetaData->SetValue(NewProp_SizeOfArray, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_SizeOfArray, TEXT("ModuleRelativePath"), TEXT("Public/GridManager.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGridManager(Z_Construct_UClass_AGridManager, TEXT("AGridManager"));
	UFunction* Z_Construct_UFunction_AGridTile_getHasBeenCheck()
	{
		struct GridTile_eventgetHasBeenCheck_Parms
		{
			bool ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AGridTile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("getHasBeenCheck"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(GridTile_eventgetHasBeenCheck_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridTile_eventgetHasBeenCheck_Parms, bool);
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridTile_eventgetHasBeenCheck_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridTile_eventgetHasBeenCheck_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGridTile_NoRegister()
	{
		return AGridTile::StaticClass();
	}
	UClass* Z_Construct_UClass_AGridTile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_WarringKingdom();
			OuterClass = AGridTile::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;

			OuterClass->LinkChild(Z_Construct_UFunction_AGridTile_getHasBeenCheck());

			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBeenCheckFromSearch, AGridTile, bool);
			UProperty* NewProp_HasBeenCheckFromSearch = new(OuterClass, TEXT("HasBeenCheckFromSearch"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBeenCheckFromSearch, AGridTile), 0x0000000000020001, CPP_BOOL_PROPERTY_BITMASK(HasBeenCheckFromSearch, AGridTile), sizeof(bool), true);
			UProperty* NewProp_f = new(OuterClass, TEXT("f"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(f, AGridTile), 0x0000000000020001);
			UProperty* NewProp_g = new(OuterClass, TEXT("g"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(g, AGridTile), 0x0000000000020001);
			UProperty* NewProp_h = new(OuterClass, TEXT("h"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(h, AGridTile), 0x0000000000020001);
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AGridTile_getHasBeenCheck());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GridTile.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
			MetaData->SetValue(NewProp_HasBeenCheckFromSearch, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_HasBeenCheckFromSearch, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
			MetaData->SetValue(NewProp_f, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_f, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
			MetaData->SetValue(NewProp_g, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_g, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
			MetaData->SetValue(NewProp_h, TEXT("Category"), TEXT("Default"));
			MetaData->SetValue(NewProp_h, TEXT("ModuleRelativePath"), TEXT("Public/GridTile.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGridTile(Z_Construct_UClass_AGridTile, TEXT("AGridTile"));
	UClass* Z_Construct_UClass_AWarringKingdomCharacter_NoRegister()
	{
		return AWarringKingdomCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AWarringKingdomCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_WarringKingdom();
			OuterClass = AWarringKingdomCharacter::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;


			UProperty* NewProp_CameraBoom = new(OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AWarringKingdomCharacter), 0x00000000044a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
			UProperty* NewProp_TopDownCameraComponent = new(OuterClass, TEXT("TopDownCameraComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TopDownCameraComponent, AWarringKingdomCharacter), 0x00000000044a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WarringKingdomCharacter.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/WarringKingdomCharacter.h"));
			MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("Public/WarringKingdomCharacter.h"));
			MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera above the character"));
			MetaData->SetValue(NewProp_TopDownCameraComponent, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_TopDownCameraComponent, TEXT("ModuleRelativePath"), TEXT("Public/WarringKingdomCharacter.h"));
			MetaData->SetValue(NewProp_TopDownCameraComponent, TEXT("ToolTip"), TEXT("Top down camera"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWarringKingdomCharacter(Z_Construct_UClass_AWarringKingdomCharacter, TEXT("AWarringKingdomCharacter"));
	UClass* Z_Construct_UClass_AWarringKingdomGameMode_NoRegister()
	{
		return AWarringKingdomGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AWarringKingdomGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_WarringKingdom();
			OuterClass = AWarringKingdomGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x008802A4;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WarringKingdomGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/WarringKingdomGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWarringKingdomGameMode(Z_Construct_UClass_AWarringKingdomGameMode, TEXT("AWarringKingdomGameMode"));
	UClass* Z_Construct_UClass_AWarringKingdomPlayerController_NoRegister()
	{
		return AWarringKingdomPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AWarringKingdomPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage_WarringKingdom();
			OuterClass = AWarringKingdomPlayerController::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800284;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WarringKingdomPlayerController.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/WarringKingdomPlayerController.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWarringKingdomPlayerController(Z_Construct_UClass_AWarringKingdomPlayerController, TEXT("AWarringKingdomPlayerController"));
	UPackage* Z_Construct_UPackage_WarringKingdom()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/WarringKingdom")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xB7AECCCB;
			Guid.B = 0x60ED92EA;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

